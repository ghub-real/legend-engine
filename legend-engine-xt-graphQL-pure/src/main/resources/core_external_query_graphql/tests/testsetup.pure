Class meta::external::query::graphQL::poc::model::Firm
{
  firmId: Integer[1];
  name: String[1];
  location: String[1];
  // firmById(id: Integer[1]) {$this->filter(item|$item.firmId == $id)->toOne()}: meta::external::query::graphQL::poc::model::Firm[*];
  allFirms() {meta::external::query::graphQL::poc::model::Firm.all()}: meta::external::query::graphQL::poc::model::Firm[*];
  persistFirm(obj: meta::external::query::graphQL::poc::model::Firm[1]) {^meta::external::query::graphQL::poc::model::Firm(firmId=1 , name='My Name' , location='London')}: meta::external::query::graphQL::poc::model::Firm[1];
}

function meta::external::query::graphQL::poc::testRuntime():meta::pure::runtime::Runtime[1]
{
  ^meta::pure::runtime::Runtime(connections = 
    meta::external::query::graphQL::poc::database::testDatabaseConnection(meta::external::query::graphQL::poc::database::h2));
}


function meta::external::query::graphQL::poc::database::testDatabaseConnection(db:meta::relational::metamodel::Database[1]):meta::relational::runtime::TestDatabaseConnection[1]
{
    ^meta::relational::runtime::TestDatabaseConnection(
        element = $db,
        type = meta::relational::runtime::DatabaseType.H2,
        timeZone = 'GMT'
    );
}

// function meta::external::query::graphQL::poc::createFirmTableAndFillDb(connection : meta::relational::runtime::DatabaseConnection[1]) : Boolean[1]
// {
//    executeInDb('Drop table if exists FirmTable;', $connection);
//    executeInDb('Create Table FirmTable(id INT, legalName VARCHAR(200), addressId INT, ceoId INT);', $connection);
//    executeInDb('insert into FirmTable (id, legalName, addressId, ceoId) values (1, \'Firm X\', 8, 1);', $connection);
//    executeInDb('insert into FirmTable (id, legalName, addressId, ceoId) values (2, \'Firm A\', 9, 5);', $connection);
//    executeInDb('insert into FirmTable (id, legalName, addressId, ceoId) values (3, \'Firm B\', 10, 3);', $connection);
//    executeInDb('insert into FirmTable (id, legalName, addressId, ceoId) values (4, \'Firm C\', 11, 7);', $connection);
//    true;
// }


###Relational
Database meta::external::query::graphQL::poc::database::h2
(
  Table PERSON
  (
    NAME VARCHAR(200) PRIMARY KEY,
    FIRMID INTEGER
  )
  Table FIRM
  (
    ID INTEGER PRIMARY KEY,
    LEGALNAME VARCHAR(200) PRIMARY KEY,
    LOCATION VARCHAR(200) NOT NULL
  )
  Join Firm_Person(PERSON.FIRMID = FIRM.ID)
)

###Mapping
Mapping meta::external::query::graphQL::poc::mapping::modelh2
(
  *meta::external::query::graphQL::poc::model::Firm: Relational
  {
    ~primaryKey
    (
      [meta::external::query::graphQL::poc::database::h2]FIRM.ID,
      [meta::external::query::graphQL::poc::database::h2]FIRM.LEGALNAME
    )
    ~mainTable [meta::external::query::graphQL::poc::database::h2]FIRM
    firmId: [meta::external::query::graphQL::poc::database::h2]FIRM.ID,
    name: [meta::external::query::graphQL::poc::database::h2]FIRM.LEGALNAME,
    location: [meta::external::query::graphQL::poc::database::h2]FIRM.LOCATION
  }
)
