let personQuery = {|meta::pure::mapping::modelToModel::test::setup::Person.all()->graphFetch($personTree)};

go$2$system$imports$import__welcome_pure_3$10 instance LambdaFunction
    expressionSequence(Property):
        Anonymous_StripedId instance SimpleFunctionExpression
            func(Property):
                [X] graphFetch_T_MANY__RootGraphFetchTree_1__T_MANY_ instance ConcreteFunctionDefinition
            functionName(Property):
                graphFetch instance String
            genericType(Property):
                 instance GenericType
                    rawType(Property):
                        [X] Person instance Class
            importGroup(Property):
                [X] import__welcome_pure_3 instance ImportGroup
            multiplicity(Property):
                [X] ZeroMany instance PackageableMultiplicity
            parametersValues(Property):
                Anonymous_StripedId instance SimpleFunctionExpression
                    func(Property):
                        [X] getAll_Class_1__T_MANY_ instance NativeFunction
                    functionName(Property):
                        getAll instance String
                    genericType(Property):
                         instance GenericType
                            rawType(Property):
                                [X] Person instance Class
                    importGroup(Property):
                        [X] import__welcome_pure_3 instance ImportGroup
                    multiplicity(Property):
                        [X] ZeroMany instance PackageableMultiplicity
                    parametersValues(Property):
                        Anonymous_StripedId instance InstanceValue
                            genericType(Property):
                                 instance GenericType
                                    rawType(Property):
                                        [X] Class instance Class
                                    typeArguments(Property):
                                         instance GenericType
                                            rawType(Property):
                                                [X] Person instance Class
                            multiplicity(Property):
                                [X] PureOne instance PackageableMultiplicity
                            usageContext(Property):
                                Anonymous_StripedId instance ParameterValueSpecificationContext
                                    functionExpression(Property):
                                        [_] Anonymous_StripedId instance SimpleFunctionExpression
                                    offset(Property):
                                        0 instance Integer
                            values(Property):
                                [~>] meta::pure::mapping::modelToModel::test::setup::Person instance Class
                Anonymous_StripedId instance VariableExpression
                    genericType(Property):
                         instance GenericType
                            rawType(Property):
                                [X] RootGraphFetchTree instance Class
                            typeArguments(Property):
                                 instance GenericType
                                    rawType(Property):
                                        [X] Person instance Class
                    multiplicity(Property):
                        [X] PureOne instance PackageableMultiplicity
                    name(Property):
                        personTree instance String
            resolvedTypeParameters(Property):
                 instance GenericType
                    rawType(Property):
                        [X] Person instance Class